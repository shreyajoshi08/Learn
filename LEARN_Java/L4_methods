



import com.sun.jdi.PathSearchingVirtualMachine;

public class Main {
    public static void main(String[] args) {

        int myAge = calAge(1997);
        System.out.println("Age is "+myAge);
        //System.out.println("Age is "+calAge(1997)); //This will also work same as above


        /*boolean gameOver = true;
        int score = 10000;
        int levelCompleted = 8;
        int bonus = 200;
        */

       /* if(score<5000 && score> 1000){
            System.out.println("Score >1k but less than 5k");
        } else if (score<1000) {
            System.out.println("Score <1k");

        } else{
            System.out.println("Got it");
        }*/

        //int finalScore = score;
        //calculateScore();
        //calculateScore2();

        calculateScore2(true, 80000, 10, 50);

        /*if(gameOver ==true){
            finalScore += (levelCompleted*bonus);
            System.out.println("Final score "+finalScore);
        }*/

        displayHighScorePosition("Tim", 2);
        System.out.println(calculateHighScorePosition(1500));
        System.out.println(calculateHighScorePosition(1000));
        System.out.println(calculateHighScorePosition(500));
        System.out.println(calculateHighScorePosition(100));
        System.out.println(calculateHighScorePosition(25));

    }

    //method without parameters
    /*public static void  calculateScore(){ //method named calculateScore
        boolean gameOver = true;
        int score = 10000;
        int levelCompleted = 2;
        int bonus = 200;
        int finalScore = score;

        if(gameOver ==true){
            finalScore += (levelCompleted*bonus);
            System.out.println("Final score "+finalScore);
        }
    }*/

    //method with parameters

    public static void  calculateScore2(boolean gameOver, int Score, int levelCompleted, int bonus){ //method named calculateScore

        int finalScore = Score;

        if(gameOver ==true){
            finalScore += (levelCompleted*bonus);
            System.out.println("Final score "+finalScore);
        }
    }

    public static int calAge(int dob){

        return (2023-dob);

    }


    public static void displayHighScorePosition(String name, int position){
        System.out.println( name+" managed to get into position " + position+ " on the high score list.");

    }

    public static int calculateHighScorePosition(int score){
        if (score>=1000){
            return 1;
        } else if ((score>=500)&&(score<1000)) {
            return 2;
        }else if ((score>=100)&&(score<500)) {
            return 3;
        }else   {
            return 4;
        }
    }

}
