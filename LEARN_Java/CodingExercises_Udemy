
import com.sun.jdi.PathSearchingVirtualMachine;

//Coding Exercise
public class PositiveNegativeZero {

    public static void main(String[] args) {
        //checkNumber(4);
        printConversion(1.5);
    }

    public static void checkNumber(int number){
        if (number >0){
            System.out.println("positive");
        } else if (number <0){
            System.out.println("negative");
        }else {
            System.out.println("zeros");
        }
    }

    public static long toMilesPerHour(double kilometersPerHour) {
        long value = 0;
        if (kilometersPerHour < 0){
            value = -1;
            return value;
        }else{
            value = Math.round (kilometersPerHour/1.609);
            return value;
        }

    }

    public static void printConversion(double kilometersPerHour) {

        if (kilometersPerHour < 0){
            System.out.println("Invalid");
        }else{
            long milesPerHour = toMilesPerHour(kilometersPerHour);
            System.out.println(kilometersPerHour +" km/h = "+ milesPerHour+" mi/h");
        }

    }
    
     public static void printMegaBytesAndKiloBytes ( int kiloBytes){
     if (kiloBytes<0){
         System.out.println("Invalid Value");
     }
     else{
         int kbs = kiloBytes%1024;
         int megabytes = kiloBytes/1024;
         
         System.out.println(kiloBytes + " KB = " + megabytes + " MB and " + kbs + " KB");
     }
     
     
 }
 public static boolean shouldWakeUp(boolean barking, int hourOfDay){
        boolean wakeUp = false;
        if (hourOfDay >= 0 && hourOfDay <=23){
            if ((hourOfDay<8 || hourOfDay>22) && barking){
            return true;
            } 
            else
            return false;
        }
        else{
            return false;
        } 
    }

public static boolean isLeapYear( int year){
        
        if( year >= 1 && year <= 9999){
            
            if( year % 4 == 0 && year %2 == 0){
            
                if( year % 100 == 0 && year %2 == 0){
                
                     if( year % 400 == 0 && year %2 == 0){
                         return true;  
                         
                    }else return false;
                    
                }else return true;
                
                
            }
             
            else{
                return false;
            }
            
        } 
        else
        return false;
        
    }
  
    public static boolean areEqualByThreeDecimalPlaces( double num1, double num2){
        num1 = (int) (num1 * 1000);
        num2 = (int) (num2 * 1000);
        if ( num1 == num2){
            
            return true;
            
        }else return false;
        
    }
    
    
    public static boolean hasEqualSum (int a, int b, int c){
        int sum = a+b;
        if(sum==c){
            return true;
        } else return false;
    }

   public static boolean hasTeen(int a, int b, int c){
      if((a >= 13 && a <= 19)||(b >= 13 && b <= 19)||(c >= 13 && c <= 19)){
          return true;
      } else return false;
  }
  
  public static boolean isTeen(int d){
      if(d >= 13 && d <= 19){
          return true;
      }else return false;
  }
}
****************************************************************************************
//Exercise 9
public class AreaCalculator {
     

public static double area(double radius){
    
    if(radius < 0)
    {
        return -1.0;
    }
    else
    {
        
        double areaCalculated= radius * radius * Math.PI;
        return areaCalculated;
        
    }
}

public static double area(double x, double y){
    
    if(x < 0 || y < 0)
    {
        return -1.0;
    }
    else
    {
        
        double areaCalculated= x * y;
        return areaCalculated;
        
    }
    
}

}
