import com.sun.jdi.PathSearchingVirtualMachine;

//Coding Exercise
public class PositiveNegativeZero {

    public static void main(String[] args) {
        //checkNumber(4);
        printConversion(1.5);
    }

    public static void checkNumber(int number){
        if (number >0){
            System.out.println("positive");
        } else if (number <0){
            System.out.println("negative");
        }else {
            System.out.println("zeros");
        }
    }

    public static long toMilesPerHour(double kilometersPerHour) {
        long value = 0;
        if (kilometersPerHour < 0){
            value = -1;
            return value;
        }else{
            value = Math.round (kilometersPerHour/1.609);
            return value;
        }

    }

    public static void printConversion(double kilometersPerHour) {

        if (kilometersPerHour < 0){
            System.out.println("Invalid");
        }else{
            long milesPerHour = toMilesPerHour(kilometersPerHour);
            System.out.println(kilometersPerHour +" km/h = "+ milesPerHour+" mi/h");
        }

    }
    
     public static void printMegaBytesAndKiloBytes ( int kiloBytes){
     if (kiloBytes<0){
         System.out.println("Invalid Value");
     }
     else{
         int kbs = kiloBytes%1024;
         int megabytes = kiloBytes/1024;
         
         System.out.println(kiloBytes + " KB = " + megabytes + " MB and " + kbs + " KB");
     }
     
     
 }
  public static boolean shouldWakeUp( boolean barking, int hourOfDay){
     
     if( hourOfDay >= 0 && hourOfDay <= 23 ){
         
          if ((hourOfDay>22 || hourOfDay<8) && barking){
           return true;
            } else{
            return false;
          }   
         }
       
     else{
         return false;
     }
 }
 
 
}
